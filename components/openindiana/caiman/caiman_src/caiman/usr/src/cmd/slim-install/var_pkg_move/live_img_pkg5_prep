#!/bin/ksh93
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
#

#
# Copy /var/pkg to /tmp if booted off a ramdisk
# Needed by pkg utility so it can expand its bookkeeping files in swap space.
#

builtin mkdir
builtin mv
builtin rm

function err_handler {
	print -u2 "$THISFILE: Error moving $VARPKG to tmpfs filesystem"
	trap - ERR
	if [ -d $VARPKG.$$ ] ; then
		/sbin/umount $VARPKG >/dev/null 2>&1
		rmdir $VARPKG >/dev/null 2>&1
		mv $VARPKG.$$ $VARPKG
	fi
	exit 1
}

THISFILE=$0		# Save for error message
TMPDIR=/tmp		# cpio uses tmpdir; let it use swap
trap err_handler ERR	# Catch errors

# Default ROOT_PATH to / if not specified as arg 1
ROOT_PATH=${1:-/}

# Act only if the root is a ramdisk
# Check if mnttab has a line with "ramdisk" in $1 and a single / in $2
mnt_pnt=$(/usr/bin/nawk \
    '$1 ~ /ramdisk/ {if ($2 ~ /^\/$/) print $2}' /etc/mnttab)
if [[ "$mnt_pnt" == "$ROOT_PATH" ]]; then

	# The object of our obsessions...
	VARPKG=/var/pkg

	# If /var/pkg has already been moved to tmpfs, we're already done.
	# If second token in mnttab line is $VARPKG, dump third token (fs type)
	varpkg_fstype=$(/usr/bin/nawk \
	    '{if ($2 == ARGV[2]) print $3}' /etc/mnttab $VARPKG)
	if [[ "$varpkg_fstype" == "tmpfs" ]] ; then
		exit 0
	fi

	# if /var/pkg is a directory (and not just a link), do the move
	if [[ -d $VARPKG && ! -L $VARPKG ]] ; then
		mv $VARPKG $VARPKG.$$
		mkdir $VARPKG
		/sbin/mount -F tmpfs swap $VARPKG
		(cd $VARPKG.$$ ; \
		    /usr/bin/find . -depth -print | \
		    /usr/bin/cpio -pdumL $VARPKG)
		rm -rf $VARPKG.$$
	else
		print -u2 "$0: $VARPKG is not a proper directory"
		err_handler
	fi
fi

exit 0
